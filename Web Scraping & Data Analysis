{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Le scraping"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 1057 entries, 0 to 1056\n",
      "Data columns (total 10 columns):\n",
      "Type de contrat        1057 non-null object\n",
      "Type de biens          1057 non-null object\n",
      "Nombre de chambres     1057 non-null object\n",
      "Metres carres          1057 non-null int64\n",
      "Adresse                1057 non-null object\n",
      "Quartier               1057 non-null object\n",
      "Prix par nuit          1057 non-null float64\n",
      "Prix par mois          1057 non-null float64\n",
      "Nombre de personnes    1057 non-null int64\n",
      "Statut                 1057 non-null object\n",
      "dtypes: float64(2), int64(2), object(6)\n",
      "memory usage: 82.7+ KB\n",
      "None\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "import scipy as sc\n",
    "import pandas as pd\n",
    "import matplotlib as plt\n",
    "from bs4 import BeautifulSoup\n",
    "from requests import get\n",
    "from time import sleep\n",
    "from time import time;start_time = time()\n",
    "from random import randint\n",
    "from IPython.core.display import clear_output\n",
    "from warnings import warn\n",
    "import matplotlib.pyplot as plt # Viz Library\n",
    "import matplotlib as mpl # Viz Library\n",
    "import seaborn as sns #Library imported from plots\n",
    "\n",
    "\n",
    "#url = 'https://www.parisattitude.com/fr/louer-appartement/location-meublee/index,locations.aspx?p='\n",
    "#codesource = requests.get(url).text\n",
    "#html_soup = BeautifulSoup(codesource, 'html.parser')\n",
    "#print(html_soup.prettify())\n",
    "#print(type(html_soup))\n",
    "#appart_containers = html_soup.find_all('div', class_= 'col-xs-12 col-sm-6 col-md-6 col-lg-4')\n",
    "#print(appart_containers.prettify())\n",
    "\n",
    "#csv_file = open('scrapig_parisattitude.csv', 'w')# open a csv file with the option write\n",
    "#csv_writer = csv.writer(csv_file) \n",
    "#csv_writer.writerow([\"noms\",\"types_biens\",\"metres_carres\",\"adresses\",\"prix_nuits\",\"prix_mois\", \"nb_personnes\",\"exclu_nouveaute\"])\n",
    "\n",
    "# Création de listes vides dans lesquelles seront ajoutées les données scrapées\n",
    "noms = []\n",
    "types_biens = []\n",
    "nbs_chambres = []\n",
    "metres_carres = []\n",
    "adresses = []\n",
    "quartiers = []\n",
    "prix_nuits = []\n",
    "prix_mois = []\n",
    "nb_personnes = []\n",
    "exclu_nouveaute = []\n",
    "\n",
    "# Création de listes avec les string correspondant aux nb de pages que l'on souhaite scraper \n",
    "pages = [str(i) for i in range(1,40)]\n",
    "\n",
    "# Préparation du contrôle de la boucle de scraping\n",
    "start_time = time()\n",
    "requests = 0\n",
    "\n",
    "# Création de la boucle: on lui énumère les actions qu'il va devoir effectuer pour toutes les pages \n",
    "for page in pages:\n",
    "\n",
    "    # Création d'une variable contenant les URL à scraper: on va scraper l'ensemble des URL pour toutes les valeurs entières de \"page\" incluses dans [1;39]\n",
    "    response = get('https://www.parisattitude.com/fr/louer-appartement/location-meublee/index,locations.aspx?p=' + page)\n",
    "\n",
    "    # Crawling des pages effectué à intervalles de temps aléatoires\n",
    "    sleep(randint(4,20))\n",
    "\n",
    "    # Calcul de la fréquence des requêtes de crawling \n",
    "    requests += 1\n",
    "    elapsed_time = time() - start_time\n",
    "    print('Request:{}; Frequency: {} requests/s'.format(requests, requests/elapsed_time))\n",
    "    clear_output(wait = True)\n",
    "\n",
    "    # Vérification si le serveur nous renvoie une réponse \n",
    "    if response.status_code != 200:\n",
    "        warn('Request: {}; Status code: {}'.format(requests, response.status_code))\n",
    "\n",
    "    # Arrêt si les requêtes de crawling sont trop fréquentes \n",
    "    if requests > 72:\n",
    "        warn('Number of requests was greater than expected.')\n",
    "        break\n",
    "\n",
    "    # Analyse du contenu de la variable \"response\" sur la base du langage HTML avec Beautiful Soup\n",
    "    html_soup = BeautifulSoup(response.text, 'html.parser')\n",
    "\n",
    "    # Sélection du container à scraper par page\n",
    "    appart_containers = html_soup.find_all('div', class_ = 'col-xs-12 col-sm-6 col-md-6 col-lg-4')\n",
    "\n",
    "    \n",
    "    # Récupération des données appartenant à \"appart_containers\"\n",
    "    for container in appart_containers:\n",
    "        \n",
    "        # Type de contrat\n",
    "        nom = container.h2.text\n",
    "        nom_appart = nom.split()\n",
    "        noms.append(nom_appart[0])\n",
    "        \n",
    "        # Type de biens\n",
    "        types_biens.append(nom_appart[1])\n",
    "\n",
    "        # Nombre de chambres\n",
    "        nbr_de_chambre = [str(s) if s.isdigit() else '0' for s in nom.split(\" \",3)[2:-1]]\n",
    "        nbs_chambres.append(''.join(nbr_de_chambre))\n",
    "\n",
    "        # Nombre de mètres carré\n",
    "        metre_carree= int(nom_appart[-2])\n",
    "        metres_carres.append(metre_carree)\n",
    "\n",
    "        # Adresse \n",
    "        adresse = container.find('span' , class_='adress').text\n",
    "        adresses.append(adresse)\n",
    "\n",
    "        # Code postal\n",
    "        code_postal = [str(s) for s in adresse.split() if s.isdigit()]\n",
    "        quartiers.append(''.join(code_postal))\n",
    "\n",
    "        #Prix par nuit\n",
    "        prix_par_nuit = float(container.find('span', class_ = 'priceN').text)\n",
    "        prix_nuits.append(prix_par_nuit)\n",
    "\n",
    "        # Prix par mois\n",
    "        prix_par_mois = float(container.find('span', class_ = 'priceM').text)\n",
    "        prix_mois.append(prix_par_mois)\n",
    "\n",
    "        # Nombre de personnes acceptées\n",
    "        nombre_personnes =int(container.find('span', class_ = 'JSMaxPeople').text)\n",
    "        nb_personnes.append(nombre_personnes)\n",
    "\n",
    "        # Statut de l'appartement\n",
    "        exclu_ou_nouveaute = container.find('div', class_ = 'AptNew').text\n",
    "        exclu_nouveaute.append(exclu_ou_nouveaute.strip())\n",
    "\n",
    "    # Création d'un tableau avec les variables scrapées    \n",
    "    liste_appart = pd.DataFrame({'Type de contrat': noms,\n",
    "    'Type de biens': types_biens,                            \n",
    "    'Nombre de chambres': nbs_chambres,                            \n",
    "    'Metres carres': metres_carres,\n",
    "    'Adresse': adresses,\n",
    "    'Quartier': quartiers,                          \n",
    "    'Prix par nuit': prix_nuits,\n",
    "    'Prix par mois': prix_mois,\n",
    "    'Nombre de personnes' : nb_personnes,\n",
    "    'Statut' : exclu_nouveaute\n",
    "    })\n",
    "    print(liste_appart.info())\n",
    "liste_appart.head(40)\n",
    "\n",
    "#Création d'un fichier excel des données scrapées\n",
    "df_appart_parisattitude = liste_appart\n",
    "df_appart_parisattitude.head()\n",
    "df_appart_parisattitude.to_excel(\"appart_paris_attitude.xlsx\",index=False)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Nettoyage des données "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 90,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type de contrat</th>\n",
       "      <th>Type de biens</th>\n",
       "      <th>Nombre de chambres</th>\n",
       "      <th>Metres carres</th>\n",
       "      <th>Adresse</th>\n",
       "      <th>Quartier</th>\n",
       "      <th>Prix par nuit</th>\n",
       "      <th>Prix par mois</th>\n",
       "      <th>Nombre de personnes</th>\n",
       "      <th>Statut</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>75016</td>\n",
       "      <td>64</td>\n",
       "      <td>1914</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre</td>\n",
       "      <td>75018</td>\n",
       "      <td>39</td>\n",
       "      <td>1183</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>75006</td>\n",
       "      <td>47</td>\n",
       "      <td>1398</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>40</td>\n",
       "      <td>avenue Jean Jaures 75019  Paris  Buttes Chau...</td>\n",
       "      <td>75019</td>\n",
       "      <td>48</td>\n",
       "      <td>1430</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>0</td>\n",
       "      <td>30</td>\n",
       "      <td>rue Pavee 75004  Paris  Le Marais</td>\n",
       "      <td>75004</td>\n",
       "      <td>50</td>\n",
       "      <td>1505</td>\n",
       "      <td>1</td>\n",
       "      <td>Exclusivité</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Type de contrat Type de biens  Nombre de chambres  Metres carres  \\\n",
       "0        Location   Appartement                   1             36   \n",
       "1        Location   Appartement                   1             31   \n",
       "2        Location   Appartement                   0             28   \n",
       "3        Location   Appartement                   1             40   \n",
       "4        Location   Appartement                   0             30   \n",
       "\n",
       "                                             Adresse  Quartier  Prix par nuit  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...     75016             64   \n",
       "1            passage Cottin 75018  Paris  Montmartre     75018             39   \n",
       "2    rue Mazarine 75006  Paris  Saint Germain Des...     75006             47   \n",
       "3    avenue Jean Jaures 75019  Paris  Buttes Chau...     75019             48   \n",
       "4                  rue Pavee 75004  Paris  Le Marais     75004             50   \n",
       "\n",
       "   Prix par mois  Nombre de personnes       Statut  \n",
       "0           1914                    2  Exclusivité  \n",
       "1           1183                    2  Exclusivité  \n",
       "2           1398                    2  Exclusivité  \n",
       "3           1430                    2  Exclusivité  \n",
       "4           1505                    1  Exclusivité  "
      ]
     },
     "execution_count": 90,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_excel('./appart_paris_attitude.xlsx')\n",
    "df.head(5)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### vérification des valeurs manquantes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 91,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Type de contrat          0\n",
       "Type de biens            0\n",
       "Nombre de chambres       0\n",
       "Metres carres            0\n",
       "Adresse                  0\n",
       "Quartier                 0\n",
       "Prix par nuit            0\n",
       "Prix par mois            0\n",
       "Nombre de personnes      0\n",
       "Statut                 773\n",
       "dtype: int64"
      ]
     },
     "execution_count": 91,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.isnull().sum() # any missing data ? statut has 757 missing value"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Suppression des annonces hors paris"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 117,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = df[~df['Quartier'].astype(str).str.startswith('9')]# il reste 993 ligne"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 118,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Nombre de chambres</th>\n",
       "      <th>Metres carres</th>\n",
       "      <th>Quartier</th>\n",
       "      <th>Prix par nuit</th>\n",
       "      <th>Prix par mois</th>\n",
       "      <th>Nombre de personnes</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>count</td>\n",
       "      <td>1015.000000</td>\n",
       "      <td>1015.000000</td>\n",
       "      <td>1015.000000</td>\n",
       "      <td>1015.000000</td>\n",
       "      <td>1015.000000</td>\n",
       "      <td>1015.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>mean</td>\n",
       "      <td>0.948768</td>\n",
       "      <td>47.884729</td>\n",
       "      <td>75009.953695</td>\n",
       "      <td>166.795074</td>\n",
       "      <td>2292.496552</td>\n",
       "      <td>2.910345</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>std</td>\n",
       "      <td>0.860792</td>\n",
       "      <td>32.216684</td>\n",
       "      <td>5.542095</td>\n",
       "      <td>468.405069</td>\n",
       "      <td>1749.849539</td>\n",
       "      <td>1.392726</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>min</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>14.000000</td>\n",
       "      <td>75001.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>851.000000</td>\n",
       "      <td>0.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>25%</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>28.000000</td>\n",
       "      <td>75005.000000</td>\n",
       "      <td>47.000000</td>\n",
       "      <td>1398.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>50%</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>39.000000</td>\n",
       "      <td>75009.000000</td>\n",
       "      <td>60.000000</td>\n",
       "      <td>1789.000000</td>\n",
       "      <td>2.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>75%</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>57.500000</td>\n",
       "      <td>75016.000000</td>\n",
       "      <td>90.000000</td>\n",
       "      <td>2513.000000</td>\n",
       "      <td>4.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>max</td>\n",
       "      <td>5.000000</td>\n",
       "      <td>330.000000</td>\n",
       "      <td>75020.000000</td>\n",
       "      <td>7828.000000</td>\n",
       "      <td>19355.000000</td>\n",
       "      <td>13.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Nombre de chambres  Metres carres      Quartier  Prix par nuit  \\\n",
       "count         1015.000000    1015.000000   1015.000000    1015.000000   \n",
       "mean             0.948768      47.884729  75009.953695     166.795074   \n",
       "std              0.860792      32.216684      5.542095     468.405069   \n",
       "min              0.000000      14.000000  75001.000000      28.000000   \n",
       "25%              0.000000      28.000000  75005.000000      47.000000   \n",
       "50%              1.000000      39.000000  75009.000000      60.000000   \n",
       "75%              1.000000      57.500000  75016.000000      90.000000   \n",
       "max              5.000000     330.000000  75020.000000    7828.000000   \n",
       "\n",
       "       Prix par mois  Nombre de personnes  \n",
       "count    1015.000000          1015.000000  \n",
       "mean     2292.496552             2.910345  \n",
       "std      1749.849539             1.392726  \n",
       "min       851.000000             0.000000  \n",
       "25%      1398.000000             2.000000  \n",
       "50%      1789.000000             2.000000  \n",
       "75%      2513.000000             4.000000  \n",
       "max     19355.000000            13.000000  "
      ]
     },
     "execution_count": 118,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.describe() #vérifier les variables numériques en utilisant describe, qui nous permet de connaître la distribution des valeurs.\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df.to_excel(\"Appart_Paris_Attitude.xlsx\",index=False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Analyse "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Répartition des annonces par arrondissement"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "Pour voir la répartition des annonces dans Paris on a choisit de faire une carte, et four ce faire il ne faut les latitudes et longitudes (geopy)."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 993 entries, 0 to 992\n",
      "Data columns (total 10 columns):\n",
      "Type de contrat        993 non-null object\n",
      "Type de biens          993 non-null object\n",
      "Nombre de chambres     993 non-null int64\n",
      "Metres carres          993 non-null int64\n",
      "Adresse                993 non-null object\n",
      "Quartier               993 non-null int64\n",
      "Prix par nuit          993 non-null int64\n",
      "Prix par mois          993 non-null int64\n",
      "Nombre de personnes    993 non-null int64\n",
      "Statut                 260 non-null object\n",
      "dtypes: int64(6), object(4)\n",
      "memory usage: 77.7+ KB\n"
     ]
    }
   ],
   "source": [
    "import pandas as pd\n",
    "import geopy\n",
    "from geopy.geocoders import Nominatim\n",
    "from geopy.extra.rate_limiter import RateLimiter\n",
    "import matplotlib.pyplot as plt\n",
    "import folium\n",
    "from folium.plugins import FastMarkerCluster\n",
    "#Importation de la base de données nettoyée\n",
    "df = pd.read_excel('./Appart_Paris_Attitude.xlsx') \n",
    "df.info() # BD avec de ttes les annonces à paris seulement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type de contrat</th>\n",
       "      <th>Type de biens</th>\n",
       "      <th>Nombre de chambres</th>\n",
       "      <th>Metres carres</th>\n",
       "      <th>Adresse</th>\n",
       "      <th>Quartier</th>\n",
       "      <th>Prix par nuit</th>\n",
       "      <th>Prix par mois</th>\n",
       "      <th>Nombre de personnes</th>\n",
       "      <th>Statut</th>\n",
       "      <th>ADDRESS1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>75016</td>\n",
       "      <td>64</td>\n",
       "      <td>1914</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre</td>\n",
       "      <td>75018</td>\n",
       "      <td>39</td>\n",
       "      <td>1183</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre,france</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "      <td>75007</td>\n",
       "      <td>63</td>\n",
       "      <td>1900</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme</td>\n",
       "      <td>75018</td>\n",
       "      <td>47</td>\n",
       "      <td>1400</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme,fr...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>75006</td>\n",
       "      <td>47</td>\n",
       "      <td>1398</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Type de contrat Type de biens  Nombre de chambres  Metres carres  \\\n",
       "0        Location   Appartement                   1             36   \n",
       "1        Location   Appartement                   1             31   \n",
       "2        Location   Appartement                   1             36   \n",
       "3        Location   Appartement                   1             28   \n",
       "4        Location   Appartement                   0             28   \n",
       "\n",
       "                                             Adresse  Quartier  Prix par nuit  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...     75016             64   \n",
       "1            passage Cottin 75018  Paris  Montmartre     75018             39   \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...     75007             63   \n",
       "3          rue Ordener 75018  Paris  mairie du 18eme     75018             47   \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...     75006             47   \n",
       "\n",
       "   Prix par mois  Nombre de personnes       Statut  \\\n",
       "0           1914                    2  Exclusivité   \n",
       "1           1183                    2  Exclusivité   \n",
       "2           1900                    2    Nouveauté   \n",
       "3           1400                    2    Nouveauté   \n",
       "4           1398                    2  Exclusivité   \n",
       "\n",
       "                                            ADDRESS1  \n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...  \n",
       "1     passage Cottin 75018  Paris  Montmartre,france  \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...  \n",
       "3    rue Ordener 75018  Paris  mairie du 18eme,fr...  \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...  "
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df['ADDRESS1'] = df['Adresse'].astype(str) + ',' +'france'   \n",
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  rue du Cherche Midi 75006  Paris  sevres,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1414, in connect\n",
      "    server_hostname=server_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 423, in wrap_socket\n",
      "    session=session\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 870, in _create\n",
      "    self.do_handshake()\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 1139, in do_handshake\n",
      "    self._sslobj.do_handshake()\n",
      "socket.timeout: _ssl.c:1059: The handshake operation timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error _ssl.c:1059: The handshake operation timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n",
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  boulevard de Magenta 75010  Paris  Republique,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n",
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  rue de Beaune 75007  Paris  Saint Germain,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  boulevard Saint Germain 75006  Paris  Saint Germain Des Pres,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n",
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  rue des Bergers 75015  Paris  Andre Citroen,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n",
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  rue Faraday 75017  Paris  Pereire,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1414, in connect\n",
      "    server_hostname=server_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 423, in wrap_socket\n",
      "    session=session\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 870, in _create\n",
      "    self.do_handshake()\n",
      "  File \"/opt/anaconda3/lib/python3.7/ssl.py\", line 1139, in do_handshake\n",
      "    self._sslobj.do_handshake()\n",
      "socket.timeout: _ssl.c:1059: The handshake operation timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error _ssl.c:1059: The handshake operation timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n"
     ]
    },
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  rue d Alleray 75015  Paris  vaugirard,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n",
      "RateLimiter caught an error, retrying (0/2 tries). Called with (*('  avenue Bosquet 75007  Paris  Eiffel Tower - Champs de Mars,france',), **{}).\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1317, in do_open\n",
      "    encode_chunked=req.has_header('Transfer-encoding'))\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1244, in request\n",
      "    self._send_request(method, url, body, headers, encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1290, in _send_request\n",
      "    self.endheaders(body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1239, in endheaders\n",
      "    self._send_output(message_body, encode_chunked=encode_chunked)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1026, in _send_output\n",
      "    self.send(msg)\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 966, in send\n",
      "    self.connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 1406, in connect\n",
      "    super().connect()\n",
      "  File \"/opt/anaconda3/lib/python3.7/http/client.py\", line 938, in connect\n",
      "    (self.host,self.port), self.timeout, self.source_address)\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 727, in create_connection\n",
      "    raise err\n",
      "  File \"/opt/anaconda3/lib/python3.7/socket.py\", line 716, in create_connection\n",
      "    sock.connect(sa)\n",
      "socket.timeout: timed out\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 355, in _call_geocoder\n",
      "    page = requester(req, timeout=timeout, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 525, in open\n",
      "    response = self._open(req, data)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 543, in _open\n",
      "    '_open', req)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 503, in _call_chain\n",
      "    result = func(*args)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1360, in https_open\n",
      "    context=self._context, check_hostname=self._check_hostname)\n",
      "  File \"/opt/anaconda3/lib/python3.7/urllib/request.py\", line 1319, in do_open\n",
      "    raise URLError(err)\n",
      "urllib.error.URLError: <urlopen error timed out>\n",
      "\n",
      "During handling of the above exception, another exception occurred:\n",
      "\n",
      "Traceback (most recent call last):\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/extra/rate_limiter.py\", line 126, in __call__\n",
      "    return self.func(*args, **kwargs)\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/osm.py\", line 387, in geocode\n",
      "    self._call_geocoder(url, timeout=timeout), exactly_one\n",
      "  File \"/opt/anaconda3/lib/python3.7/site-packages/geopy/geocoders/base.py\", line 378, in _call_geocoder\n",
      "    raise GeocoderTimedOut('Service timed out')\n",
      "geopy.exc.GeocoderTimedOut: Service timed out\n"
     ]
    }
   ],
   "source": [
    "#Start geocoding \"l'éxecution de cette cellule prend du temps\"\n",
    "from geopy.extra.rate_limiter import RateLimiter\n",
    "locator = Nominatim(user_agent=\"myGeocoder\")\n",
    "geocode = RateLimiter(locator.geocode, min_delay_seconds=1)#conveneint function to delay between geocoding calls\n",
    "df['location'] = df['ADDRESS1'].apply(geocode)#create location column\n",
    "df['point'] = df['location'].apply(lambda loc: tuple(loc.point) if loc else None)#create longitude, laatitude and altitude from location column (returns tuple)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type de contrat</th>\n",
       "      <th>Type de biens</th>\n",
       "      <th>Nombre de chambres</th>\n",
       "      <th>Metres carres</th>\n",
       "      <th>Adresse</th>\n",
       "      <th>Quartier</th>\n",
       "      <th>Prix par nuit</th>\n",
       "      <th>Prix par mois</th>\n",
       "      <th>Nombre de personnes</th>\n",
       "      <th>Statut</th>\n",
       "      <th>ADDRESS1</th>\n",
       "      <th>location</th>\n",
       "      <th>point</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>75016</td>\n",
       "      <td>64</td>\n",
       "      <td>1914</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre</td>\n",
       "      <td>75018</td>\n",
       "      <td>39</td>\n",
       "      <td>1183</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre,france</td>\n",
       "      <td>(Passage Cottin, Château Rouge, Quartier de Cl...</td>\n",
       "      <td>(48.8878829, 2.3470043, 0.0)</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "      <td>75007</td>\n",
       "      <td>63</td>\n",
       "      <td>1900</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme</td>\n",
       "      <td>75018</td>\n",
       "      <td>47</td>\n",
       "      <td>1400</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme,fr...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>75006</td>\n",
       "      <td>47</td>\n",
       "      <td>1398</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>(Rue Mazarine, Quartier de la Monnaie, Paris 6...</td>\n",
       "      <td>(48.8563046, 2.3373483, 0.0)</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Type de contrat Type de biens  Nombre de chambres  Metres carres  \\\n",
       "0        Location   Appartement                   1             36   \n",
       "1        Location   Appartement                   1             31   \n",
       "2        Location   Appartement                   1             36   \n",
       "3        Location   Appartement                   1             28   \n",
       "4        Location   Appartement                   0             28   \n",
       "\n",
       "                                             Adresse  Quartier  Prix par nuit  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...     75016             64   \n",
       "1            passage Cottin 75018  Paris  Montmartre     75018             39   \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...     75007             63   \n",
       "3          rue Ordener 75018  Paris  mairie du 18eme     75018             47   \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...     75006             47   \n",
       "\n",
       "   Prix par mois  Nombre de personnes       Statut  \\\n",
       "0           1914                    2  Exclusivité   \n",
       "1           1183                    2  Exclusivité   \n",
       "2           1900                    2    Nouveauté   \n",
       "3           1400                    2    Nouveauté   \n",
       "4           1398                    2  Exclusivité   \n",
       "\n",
       "                                            ADDRESS1  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...   \n",
       "1     passage Cottin 75018  Paris  Montmartre,france   \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...   \n",
       "3    rue Ordener 75018  Paris  mairie du 18eme,fr...   \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...   \n",
       "\n",
       "                                            location  \\\n",
       "0                                               None   \n",
       "1  (Passage Cottin, Château Rouge, Quartier de Cl...   \n",
       "2                                               None   \n",
       "3                                               None   \n",
       "4  (Rue Mazarine, Quartier de la Monnaie, Paris 6...   \n",
       "\n",
       "                          point  \n",
       "0                          None  \n",
       "1  (48.8878829, 2.3470043, 0.0)  \n",
       "2                          None  \n",
       "3                          None  \n",
       "4  (48.8563046, 2.3373483, 0.0)  "
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Type de contrat</th>\n",
       "      <th>Type de biens</th>\n",
       "      <th>Nombre de chambres</th>\n",
       "      <th>Metres carres</th>\n",
       "      <th>Adresse</th>\n",
       "      <th>Quartier</th>\n",
       "      <th>Prix par nuit</th>\n",
       "      <th>Prix par mois</th>\n",
       "      <th>Nombre de personnes</th>\n",
       "      <th>Statut</th>\n",
       "      <th>ADDRESS1</th>\n",
       "      <th>location</th>\n",
       "      <th>point</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>altitude</th>\n",
       "      <th>latitude</th>\n",
       "      <th>longitude</th>\n",
       "      <th>altitude</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <td>0</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>75016</td>\n",
       "      <td>64</td>\n",
       "      <td>1914</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue de Passy 75016  Paris  Trocadero - Eiffe...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>1</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>31</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre</td>\n",
       "      <td>75018</td>\n",
       "      <td>39</td>\n",
       "      <td>1183</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>passage Cottin 75018  Paris  Montmartre,france</td>\n",
       "      <td>(Passage Cottin, Château Rouge, Quartier de Cl...</td>\n",
       "      <td>(48.8878829, 2.3470043, 0.0)</td>\n",
       "      <td>48.887883</td>\n",
       "      <td>2.347004</td>\n",
       "      <td>0.0</td>\n",
       "      <td>48.887883</td>\n",
       "      <td>2.347004</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>2</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>36</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "      <td>75007</td>\n",
       "      <td>63</td>\n",
       "      <td>1900</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue du Champ de Mars 75007  Paris  Champs de...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>3</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>1</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme</td>\n",
       "      <td>75018</td>\n",
       "      <td>47</td>\n",
       "      <td>1400</td>\n",
       "      <td>2</td>\n",
       "      <td>Nouveauté</td>\n",
       "      <td>rue Ordener 75018  Paris  mairie du 18eme,fr...</td>\n",
       "      <td>None</td>\n",
       "      <td>None</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <td>4</td>\n",
       "      <td>Location</td>\n",
       "      <td>Appartement</td>\n",
       "      <td>0</td>\n",
       "      <td>28</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>75006</td>\n",
       "      <td>47</td>\n",
       "      <td>1398</td>\n",
       "      <td>2</td>\n",
       "      <td>Exclusivité</td>\n",
       "      <td>rue Mazarine 75006  Paris  Saint Germain Des...</td>\n",
       "      <td>(Rue Mazarine, Quartier de la Monnaie, Paris 6...</td>\n",
       "      <td>(48.8563046, 2.3373483, 0.0)</td>\n",
       "      <td>48.856305</td>\n",
       "      <td>2.337348</td>\n",
       "      <td>0.0</td>\n",
       "      <td>48.856305</td>\n",
       "      <td>2.337348</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "  Type de contrat Type de biens  Nombre de chambres  Metres carres  \\\n",
       "0        Location   Appartement                   1             36   \n",
       "1        Location   Appartement                   1             31   \n",
       "2        Location   Appartement                   1             36   \n",
       "3        Location   Appartement                   1             28   \n",
       "4        Location   Appartement                   0             28   \n",
       "\n",
       "                                             Adresse  Quartier  Prix par nuit  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...     75016             64   \n",
       "1            passage Cottin 75018  Paris  Montmartre     75018             39   \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...     75007             63   \n",
       "3          rue Ordener 75018  Paris  mairie du 18eme     75018             47   \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...     75006             47   \n",
       "\n",
       "   Prix par mois  Nombre de personnes       Statut  \\\n",
       "0           1914                    2  Exclusivité   \n",
       "1           1183                    2  Exclusivité   \n",
       "2           1900                    2    Nouveauté   \n",
       "3           1400                    2    Nouveauté   \n",
       "4           1398                    2  Exclusivité   \n",
       "\n",
       "                                            ADDRESS1  \\\n",
       "0    rue de Passy 75016  Paris  Trocadero - Eiffe...   \n",
       "1     passage Cottin 75018  Paris  Montmartre,france   \n",
       "2    rue du Champ de Mars 75007  Paris  Champs de...   \n",
       "3    rue Ordener 75018  Paris  mairie du 18eme,fr...   \n",
       "4    rue Mazarine 75006  Paris  Saint Germain Des...   \n",
       "\n",
       "                                            location  \\\n",
       "0                                               None   \n",
       "1  (Passage Cottin, Château Rouge, Quartier de Cl...   \n",
       "2                                               None   \n",
       "3                                               None   \n",
       "4  (Rue Mazarine, Quartier de la Monnaie, Paris 6...   \n",
       "\n",
       "                          point   latitude  longitude  altitude   latitude  \\\n",
       "0                          None        NaN        NaN       NaN        NaN   \n",
       "1  (48.8878829, 2.3470043, 0.0)  48.887883   2.347004       0.0  48.887883   \n",
       "2                          None        NaN        NaN       NaN        NaN   \n",
       "3                          None        NaN        NaN       NaN        NaN   \n",
       "4  (48.8563046, 2.3373483, 0.0)  48.856305   2.337348       0.0  48.856305   \n",
       "\n",
       "   longitude  altitude  \n",
       "0        NaN       NaN  \n",
       "1   2.347004       0.0  \n",
       "2        NaN       NaN  \n",
       "3        NaN       NaN  \n",
       "4   2.337348       0.0  "
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# split point column into latitude, longitude and altitude columns\n",
    "c=df.point.astype(bool)\n",
    "d=pd.DataFrame(df.point.dropna().values.tolist(),columns=['latitude','longitude','altitude'],index=df[c].index)\n",
    "df=pd.concat([df,d],axis=1)\n",
    "df.to_excel(\"Appart_Paris_Attitude1.xlsx\",index=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Start mapping\n",
    "df_map = pd.read_excel('Appart_Paris_Attitude1.xlsx')#importation de la base avec les latitude et longitude\n",
    "df_map = df_map.drop(['ADDRESS1', 'location', 'point', 'altitude'], axis=1) #clean out the unwanted columns\n",
    "df_map = df_map.dropna(subset=[\"latitude\", \"longitude\"]) #supprimé les rows où lat et long sont null pr afficher la carte"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div style=\"width:100%;\"><div style=\"position:relative;width:100%;height:0;padding-bottom:60%;\"><iframe src=\"data:text/html;charset=utf-8;base64,\" style=\"position:absolute;width:100%;height:100%;left:0;top:0;border:none !important;\" allowfullscreen webkitallowfullscreen mozallowfullscreen></iframe></div></div>"
      ],
      "text/plain": [
       "<folium.folium.Map at 0x125c89650>"
      ]
     },
     "execution_count": 56,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "from folium.plugins import HeatMap\n",
    "paris_map = folium.Map(location=[48.856613, 2.352222],zoom_start = 12)\n",
    "data_loc= df_map[['latitude','longitude']].values\n",
    "data_loc =data_loc.tolist()\n",
    "hm = plugins.HeatMap(data_loc)\n",
    "hm.add_to(paris_map)\n",
    "paris_map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Distribution des prix (par nuit et par mois)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns\n",
    "import matplotlib.pyplot as plt\n",
    "sns.distplot(df[\"Prix par nuit\"]);\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x1a2ad1c3d0>"
      ]
     },
     "execution_count": 88,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# distribution du Prix par mois\n",
    "sns.kdeplot(df[\"Prix par mois\"], shade=True, color = \"red\" , label='Estimated PDF of price in paris')\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Comparaison des prix à la nuit et au mois"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 119,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1440x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df['Prix par mois/30'] = df['Prix par mois']/30\n",
    "prix_nuit = df.groupby('Quartier')['Prix par nuit'].mean()\n",
    "prix_mois = df.groupby('Quartier')['Prix par mois/30'].mean()\n",
    "\n",
    "fig = plt.figure() # Create matplotlib figure\n",
    "fig.set_size_inches(20, 10)\n",
    "\n",
    "ax = fig.add_subplot(111) # Create matplotlib axes\n",
    "ax2 = ax.twiny() # Create another axes that shares the same y-axis as ay.\n",
    "\n",
    "width = 0.3\n",
    "\n",
    "p1 = prix_nuit.sort_values(ascending=True).plot(kind='barh', color='red', ax=ax, width=width, position =1, legend = True,label = 'Prix par nuit')\n",
    "p2 = prix_mois.plot(kind='barh', color='blue', ax=ax2, width=width, position=0,legend = True,label = 'Prix par mois/30')\n",
    "\n",
    "\n",
    "ax.set_xlabel('prix par nuit moyen')\n",
    "ax2.set_xlabel('prix par mois/30 moyen')\n",
    "plt.title('Comparaison des prix à la nuit et au mois', fontsize=18)\n",
    "ax2.legend(loc = 'lower right')\n",
    "ax.legend(loc = 'lower right', borderaxespad = 2)\n",
    "plt.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Type d'annonces"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x125795890>"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "%matplotlib inline\n",
    "import matplotlib\n",
    "bien_type_df = df.groupby('Type de biens').Quartier.count()\n",
    "bien_type_df = bien_type_df.reset_index()\n",
    "bien_type_df = bien_type_df.rename(columns={'Quartier': \"nombre d'annonce\"})\n",
    "objects = bien_type_df['Type de biens']\n",
    "y_pos = bien_type_df[\"nombre d'annonce\"]\n",
    "bien_type_df.plot.bar(x = 'Type de biens',\n",
    "                          y = \"nombre d'annonce\",\n",
    "                          figsize = (12, 6),\n",
    "                          title = \"Le Type d'annonces, ParisAttitude website\",\n",
    "                          legend = False)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Analyse de prix par type de logement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1.0, 'Analyse de prix par type de logement')"
      ]
     },
     "execution_count": 81,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df = df.drop(df.columns[[16,17,18]], axis=1)\n",
    "pricebytype = df.groupby('Type de biens').agg(['mean','max','min'])[\"Prix par mois\"]\n",
    "\n",
    "pricebytype.plot(kind='bar')\n",
    "plt.xlabel('Type de logement')\n",
    "plt.ylabel('Prix')\n",
    "plt.title('Analyse de prix par type de logement')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Nombre de personnes par type de logement"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x126f50d10>"
      ]
     },
     "execution_count": 60,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.figure(figsize=(12,6))\n",
    "df.groupby('Type de biens')['Nombre de personnes'].mean().sort_values().plot(kind='barh', \n",
    "x =\"Nombre de personnes\", color=['#F06292', '#E91E63', '#7DCEA0', '#F7DC6F', '#76D7C4'],title = \"Combien de personnes cette maison peut-elle accueillir?\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Nombre de chambres par appartement en fonction du quartier"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 120,
   "metadata": {},
   "outputs": [],
   "source": [
    "def getNombreChambreParArrondissement():\n",
    "    ListQuartier = [str(elt) for elt in sorted(df[\"Quartier\"].unique())]\n",
    "    StatsParQuartier = {} #Création d'un dictionnaire vide pour y placer la statistique par arrondissement\n",
    "    maxChambres = df[\"Nombre de chambres\"].max() #Définition du maximum de chambres dans notre dataframe\n",
    "    minChambres = df[\"Nombre de chambres\"].min() #Définition du minimum de chambres dans notre dataframe\n",
    "    #Initialisation de la statistique\n",
    "    for elt in ListQuartier :\n",
    "        StatsParQuartier[elt] = [0]*(int(maxChambres)-int(minChambres)+1)\n",
    "    \n",
    "    #création d'une liste associant le quartier avec la valeur \"Nombre de chambres\"\n",
    "    mytuple = df.groupby([\"Quartier\",\"Nombre de chambres\"]).size().iteritems()\n",
    "    for ((Quartier,NombreDeChambres),count) in mytuple : \n",
    "        StatsParQuartier[str(Quartier)][int(NombreDeChambres)]=count \n",
    "    \n",
    "    #Transformation de la liste en tuple pour la visualisation graphique avec Matplotlib\n",
    "    for key in StatsParQuartier:\n",
    "        StatsParQuartier[key]=tuple(StatsParQuartier[key])\n",
    "    \n",
    "    #Mise en forme avec Matplotlib\n",
    "    TableauNombreDeChambres = tuple([cpt for cpt in range(int(minChambres),int(maxChambres)+1)]) \n",
    "    row = 1\n",
    "    column = 0 \n",
    "    grid  = (int(len(ListQuartier)/3)+2,3)\n",
    "    fig = plt.subplots(squeeze=False,figsize=(10, 20))\n",
    "    for key in StatsParQuartier:\n",
    "        #Calcul des coordonnées \n",
    "        column = column + 1\n",
    "        if(column % 4 == 0 ):\n",
    "            row = row + 1\n",
    "            column = 1\n",
    "        ax = plt.subplot2grid(grid, (row-1, column-1))#Placement de chaque subplot dans le tableau \n",
    "        ax.bar(TableauNombreDeChambres, StatsParQuartier[key])\n",
    "        ax.set_ylabel('Nombre appartements',fontsize=8) #Titre de l'axe Y\n",
    "        ax.set_xlabel('Nombre chambres',fontsize=8) #Titre de l'axe X\n",
    "        ax.set_title(\" Nombre de chambres par appartement dans le \"+key,fontsize=8) #Titre des graphiques\n",
    "        ax.set_xticks(TableauNombreDeChambres) #On montre l'ensemble des possibilités du nombre de chambres sur l'axe y\n",
    "        ax.set_yticks(StatsParQuartier[key], minor=True) #On montre l'ensemble des possibilités du nombre de chambres sur l'axe y\n",
    "        \n",
    "    plt.tight_layout()\n",
    "    plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 121,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x1440 with 20 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "getNombreChambreParArrondissement()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Nombre d'annonce en \"Exclusivité\" / \"Nouveauté\" / \"Non spécifié\""
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.loc[df['Statut'].isnull(),'Statut']= \"non spécifié\" #j'ai D'abord attribué au valeurs manquantes dans \"Statut\" le phrase\"non spécifié\" pour qu'on puisse sortir un camembert \n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use(\"fivethirtyeight\")\n",
    "df.Statut.value_counts().plot(kind='pie',autopct='%1.1f%%',startangle=90, shadow=False, legend = False, fontsize=14, wedgeprops = {'edgecolor': 'black'})\n",
    "plt.title(\"La nature des annonces\")\n",
    "plt.tight_layout()\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Heatmap de correlation entre les variables du DataFrame"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 97,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Suppression des valeurs non utilisées\n",
    "df = df.drop(\"Quartier\",axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 98,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "Text(0.5, 1, 'Correlation entre les différentes variables du DataFrame')"
      ]
     },
     "execution_count": 98,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x720 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "import seaborn as sns \n",
    "#Calcul de correlation \n",
    "corr = df.corr()\n",
    "f,ax = plt.subplots(figsize=(10, 10))\n",
    "\n",
    "#Création de la heatmap avec seaborn\n",
    "ax = sns.heatmap(\n",
    "    corr, \n",
    "    annot=True,\n",
    "    linewidths=.2,\n",
    "    vmin=-1, vmax=1, center=0,\n",
    "    cmap=sns.diverging_palette(20, 220, n=200),\n",
    "    square=True,\n",
    "    fmt= '.2f',\n",
    "    ax=ax\n",
    ")\n",
    "ax.set_ylim(5.0, 0)\n",
    "ax.set_xticklabels(\n",
    "    ax.get_xticklabels(),\n",
    "    rotation=55,\n",
    "    horizontalalignment='right'\n",
    ");\n",
    "\n",
    "plt.title(\"Correlation entre les différentes variables du DataFrame\", fontsize =15)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Relation entre le prix et la surface"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "lmplt = sns.lmplot(x = 'Metres carres', y= 'Prix par nuit', data=df, \n",
    "          line_kws={'color': 'red'},fit_reg = True,scatter_kws={'facecolors':'blue'})\n",
    "lmplt = lmplt.set_axis_labels(\"Surface en m2\", \"Price\")\n",
    "\n",
    "fig = lmplt.fig\n",
    "fig.suptitle(\"Analyse des prix par la taille de la maison\", fontsize=18)\n",
    "lmplt.fig.subplots_adjust(top=.8)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Pearson correlation entre prix et surface"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# we see \"pearsonr=0.86\" which indicates the pearson correlation of these two variables.\n",
    "#However, we also see the p value is pretty small, \n",
    "#which indicates that there is a significant linear relation between the two variables\n",
    "import scipy.stats as stats\n",
    "jplot = sns.jointplot(df['Metres carres'],df['Prix par mois'], color = 'blue')\n",
    "jplot.annotate(stats.pearsonr)\n",
    "plt.subplots_adjust(top=0.8)\n",
    "jplot.fig.suptitle('Pearson correlation entre le prix par mois et la surface')\n",
    "jplot.set_axis_labels('surface', 'prix par mois')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Correlation entre le prix et le nombre de chambres"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x432 with 3 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "jplot = sns.jointplot(df['Nombre de chambres'],df['Prix par mois'], color = 'red')\n",
    "jplot.annotate(stats.pearsonr)\n",
    "plt.subplots_adjust(top=0.8)\n",
    "jplot.fig.suptitle('Pearson correlation entre le prix par mois et le nombre de chambres')\n",
    "jplot.set_axis_labels('Nb de chambres', 'prix par mois')\n",
    "plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
